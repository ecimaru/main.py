    - AiStore클래스
        - set_product 함수 수정
            - 상품아이디에 해당하는 재고데이터프레임에 재고 추가및 가격 재등록
            - 상품아이디가 없다면 재고 및 가격 입력하여 재고데이터프레임에 추가(append 또는 concate 함수사용)
        - buy_product 함수 수정
            - 파라미터: 상품아이디, 구매개수, 입력금액
            - 재고데이터프레임의 해당 상품의 개수를 차감
            - 해당 물품의 가격과 개수로 전체 지불 해야할 금액 산출
            - 입력금액 에서 지불해야할 금액 차이로 ‘잔돈은 {금액차} 입니다’ 출력
            - 해당 상품이 없을시: ‘상품이 존재하지 않습니다’ 출
            - 해당 물품의 재고가 부족할시: ‘재고가 부족합니다’ 출력
            - 입력금액이 지불해야 할 금액보다 작을시: '금액이 부족합니다.' 출력
        - show_products 함수 생성
            - 파라미터: 상품데이터프레임
            - 가지고 있는 재고데이터프레임의 모든 물품 정보를 출력(상품명 포함되어야함)
            - '상품명:{} - 가격:{} (재고{}) id:{}’ 문자열이 등록상품 개수만큼 나와야함
        - update_data 함수 생성
            - 파라미터: 스토어데이터프레임, 재고데이터프레임
            - 클래스내부에 변경된 데이터들을 각각 데이터프레임에 업데이트


    - 스토어 모듈 프로세스
        - create_store함수 수정
            - 스토어 데이터프레임에 입력받은 스토어아이디를 인덱스로 스토어데이터 추가
            - 스토어데이터는 스토어데이터프레임의 컬럼에 맞게 구성(딕셔너리추천)
        - show_list 함수 수정
            - 모든 스토어의 정보를 다음과 같이 출력
            - ‘스토어이름:{} 스토어 아이디:{} 스토어 위치:{} 등록상품:{}’
        - search_store 함수 수정
            - 파라미터: 스토어아이디
            - 스토어가 있다면 스토어데이터프레임 에서 해당 스토어아이디에 해당하는 데이터 추출
            - 스토어가 있다면 재고데이터프레임 에서 해당 스토어아이디에 해당하는 재고데이터프레임 추출
            - 추출한 데이터로부터 AiStore인스턴스 생성후 반환(리턴)
            - 고객이 없다면 None 반환
        - show_store 함수 수정
            - 입력받은 스토어 아디로 search_store 를 통해 스토어 인스턴스를 받음
            - ‘스토어이름:{} 스토어 아이디:{} 스토어 위치:{} 등록상품:{}’ 출력
            - 스토어의 show_products 함수 실행
        - buy 함수 수정
            - 입력받은 스토어 아디로 search_store 를 통해 스토어 인스턴스를 받음
            - 스토어의 show_products 함수 실행
            - 스토어가 있으면 상품아이디, 개수, 지불금액 입력받음 (옵션으로 필요 지불금액 출력)
            - get_price 함수로 필요가격 출력
            - buy_product 함수로 물품 구매 진행
        - manager_product 함수 생성
            - 입력받은 스토어 아디로 search_store 를 통해 스토어 인스턴스를 받음
            - '등록 가능 상품 {상품데이터프레임}' 을 출력(print)
            - 상품아이디, 개수, 가격 입력받음
            - set_product 함수 이용하여 해당스토어 재고 및 가격 수정
        - products_counts함수 생성
            - 재고데이터프레임에 상품데이터프레임을 상품아이디(’p_id’) 기준으로 결합(merge 또는 join)
            - 결합된 데이터프레임에서 상품이름과 상품개수만을 부분 데이터프레임으로 추출
            - 추출한 부분데이터 프레임에서 상품이름을 그룹화하여 상품이름별 총 재고개수를 데이터프레임으로 출력           
            
        - 6번 옵션 실행시 스토어데이터프레임 및 재고데이터프레임 csv 파일로 각각 저장
            - 저장시 인덱스는 빼고 저장